group_by(country) %>%
mutate(mean = mean(value[variable!='delivery_overallindex100'])) %>%
#   mutate(mean = mean(value,na.rm = T)) %>%
ungroup() %>%
dcast(country + mean ~ variable) %>%
melt() %>%
group_by(country) %>%
mutate(mean = value[variable=='mean']) %>%
ungroup() %>%
group_by(variable) %>%
arrange(-value)
library(pbtools)
library(gridExtra)
library(pbtools)
file <- tempfile()
urldata <- 'http://www.governancereport.org/fileadmin/governancereport/2014/downloads/GovReportDataset2014.csv'
urlindex <- 'http://www.governancereport.org/fileadmin/governancereport/2014/downloads/GovRep2014Indexes.csv'
download.file(urldata,destfile='./data-input/GovReport2014_data.csv')
download.file(urlindex,destfile='./data-input/GovReport2014_index.csv')
GovReportIndex2014 <- read.csv('./data-input/GovReport2014_index.csv')
GovReportData2014 <- read.csv('./data-input/GovReport2014_data.csv')
countries <- c('France','Singapore','Australia','Canada','United States',
'United Kingdom','New Zealand','Netherlands')
variables_indiv <- c('a5010','a5011','a5074','a5020',
'a5081','a5074','a5022','a5072')
# INDEXES CODEBOOK AT
# http://www.governancereport.org/fileadmin/governancereport/2014/downloads/IndexesCodebook.pdf
variables_index <- c('delivery_overallindex100','coordexpindex100','regqualindex100',
'intelligenceindex100')
# check that the country and variable names are correct in lists for filtering
sapply(countries, function(x) x %in% GovReportData2014$country)
sapply(variables_indiv, function(x) x %in% GovReportData2014$variable)
sapply(variables_index, function(x) x %in% GovReportData2014$variable)
variables_indiv <- c('a5010','a5011','a5074','a5020',
'a5081','a5074','a5022','a5072')
# INDEXES CODEBOOK AT
# http://www.governancereport.org/fileadmin/governancereport/2014/downloads/IndexesCodebook.pdf
variables_index <- c('delivery_overallindex100','coordexpindex100','regqualindex100',
'intelligenceindex100')
# check that the country and variable names are correct in lists for filtering
sapply(countries, function(x) x %in% GovReportData2014$country)
sapply(variables_indiv, function(x) x %in% GovReportIndex2014$variable)
sapply(variables_index, function(x) x %in% GovReportData2014$variable)
variables_indiv <- c('a5010','a5011','a5074','a5020',
'a5081','a5074','a5022','a5072')
# INDEXES CODEBOOK AT
# http://www.governancereport.org/fileadmin/governancereport/2014/downloads/IndexesCodebook.pdf
variables_index <- c('delivery_overallindex100','coordexpindex100','regqualindex100',
'intelligenceindex100')
# check that the country and variable names are correct in lists for filtering
sapply(countries, function(x) x %in% GovReportData2014$country)
sapply(variables_index, function(x) x %in% GovReportIndex2014$variable)
sapply(variables_indiv, function(x) x %in% GovReportData2014$variable)
sapply(variables_index, function(x) x %in% GovReportIndex2014$variable)
grr_i <- melt(GovReportIndex2014,id.vars = 'country') %>%
filter(country %in% countries & variable %in% variables_index) %>%
group_by(country) %>%
mutate(mean = mean(value[variable!='delivery_overallindex100'])) %>%
#   mutate(mean = mean(value,na.rm = T)) %>%
ungroup() %>%
dcast(country + mean ~ variable) %>%
melt() %>%
group_by(country) %>%
mutate(mean = value[variable=='mean']) %>%
ungroup() %>%
group_by(variable) %>%
arrange(-value)
grr_i$variable <- factor(grr_i$variable, levels=c('mean',
'delivery_overallindex100',
'intelligenceindex100',
'coordexpindex100',
'regqualindex100'))
grr_i$variable <- revalue(grr_i$variable, c('mean'='Average',
'intelligenceindex100'='Analytical capacity',
'coordexpindex100'='Quality of coordination',
'regqualindex100'='Quality of regulation',
'delivery_overallindex100'='Delivery capacity (outcomes)'))
variablesCZ <- c('Analytical capacity','Quality of coordination',
'Quality of regulation','Delivery capacity (outcomes)')
grr_i$alphaval <- .5
grr_i$alphaval[grr_i$countr=='Czech Republic'] <- 1
loadcustomthemes(ifgcolours,'Myriad Pro')
ggplot <- function(...) ggplot2::ggplot(...) +
scale_fill_manual(values=themebasecolours) +
scale_colour_manual(values=themebasecolours)
grr_iplots <- mapply(function(x, y) {
grr_i2 <- grr_i[grr_i$variable==x,]
grr_i2$country <- with(grr_i2, reorder(country,value))
grr_iplot <- ggplot(grr_i2[grr_i2$variable==x,], aes(country, value,alpha=alphaval)) +
geom_bar(stat='identity',position='dodge',fill=y) +
scale_alpha_identity() +
coord_flip() +
scale_y_continuous(limits=c(0,100),breaks=c(0,25,50,75,100)) +
theme(panel.grid.major.y=element_blank(),panel.grid.minor.x=element_line(),
axis.text.y=element_text(size=12), plot.title=element_text(size=14)) +
labs(title=x)
}, variablesCZ, themebasecolours[1:4], SIMPLIFY=FALSE)
args.list <- c(grr_iplots, 2,2)
names(args.list) <- c("plot1", "plot2", "plot3", 'plot4', "nrow", "ncol")
do.call(grid.arrange, args.list)
library(gridExtra)
do.call(grid.arrange, args.list)
install.packages("gridExtra", lib="C:/Program Files/R/R-3.0.2/library")
library(gridExtra)
do.call(grid.arrange, args.list)
library(gridExtra)
do.call(grid.arrange, args.list)
remove.packages("gridExtra")
remove.packages("gridExtra", lib="C:/Program Files/R/R-3.0.2/library")
install.packages("gridExtra", lib="C:/Program Files/R/R-3.0.2/library")
library(gridExtra)
do.call(grid.arrange, args.list)
View(grr_i)
grr_v <- melt(GovReportData2014,id.vars = 'country') %>%
filter(country %in% countries & variable %in% variables_indiv) %>%
group_by(country) %>%
mutate(mean = mean(value[variable!='delivery_overallindex100'])) %>%
#   mutate(mean = mean(value,na.rm = T)) %>%
ungroup() %>%
dcast(country + mean ~ variable) %>%
melt() %>%
group_by(country) %>%
mutate(mean = value[variable=='mean']) %>%
ungroup() %>%
group_by(variable) %>%
arrange(value)
varlist_indiv <- c('mean'='Average','proff'='Profesionalita','impar'='Impartiality',
'X6.1'='Effectiveness of regulation','X6.3'='Regulation enforced without delay',
'a3032'='Efficiency of tax collection','a3033'='Capacity to stop tax evasion')
variables_indiv <- names(varlist_indiv)
grr_v$variable <- revalue(grr_v$variable, varlist_indiv)
varlist_indiv
grr_v$variable
values(varlist_indiv)
varlist_indiv <- c('mean'='Average','proff'='Profesionalita','impar'='Impartiality',
'X6.1'='Effectiveness of regulation','X6.3'='Regulation enforced without delay',
'a3032'='Efficiency of tax collection','a3033'='Capacity to stop tax evasion')
variables_indiv <- names(varlist_indiv)
# INDEXES CODEBOOK AT
# http://www.governancereport.org/fileadmin/governancereport/2014/downloads/IndexesCodebook.pdf
variables_index <- c('delivery_overallindex100','coordexpindex100','regqualindex100',
'intelligenceindex100')
# check that the country and variable names are correct in lists for filtering
sapply(countries, function(x) x %in% GovReportData2014$country)
sapply(variables_index, function(x) x %in% GovReportIndex2014$variable)
sapply(variables_indiv, function(x) x %in% GovReportData2014$variable)
sapply(variables_indiv, function(x) x %in% GovReportData2014$variable)
sapply(variables_indiv, function(x) x %in% names(GovReportData2014))
GovReportData2014$proff
sapply(variables_index, function(x) x %in% names(GovReportIndex2014)
)
sapply(variables_indiv, function(x) x %in% names(GovReportData2014))
grr_v <- melt(GovReportData2014,id.vars = 'country') %>%
filter(country %in% countries & variable %in% variables_indiv) %>%
group_by(country) %>%
mutate(mean = mean(value[variable!='delivery_overallindex100'])) %>%
#   mutate(mean = mean(value,na.rm = T)) %>%
ungroup() %>%
dcast(country + mean ~ variable) %>%
melt() %>%
group_by(country) %>%
mutate(mean = value[variable=='mean']) %>%
ungroup() %>%
group_by(variable) %>%
arrange(value)
grr_v$variable <- revalue(grr_v$variable, varlist_indiv)
grr_v$alphaval <- .5
grr_v$alphaval[grr_v$country=='United Kingdom'] <- 1
loadcustomthemes(ifgcolours,'Myriad Pro')
ggplot <- function(...) ggplot2::ggplot(...) +
scale_fill_manual(values=themebasecolours) +
scale_colour_manual(values=themebasecolours)
grrplots <- mapply(function(x, y) {
grr_v2 <- grr_v[grr_v$variable==x,]
grr_v2$value[is.na(grr_v2$value)] <- -200
grr_v2$country <- with(grr_v2, reorder(country,value))
grr_v2$textpos <- ifelse(grr_v2$value>0,grr_v2$value,0)+.1
grr_vplot <- ggplot(grr_v2[grr_v2$variable==x,],
aes(country, value,alpha=alphaval)) +
geom_bar(stat='identity',position='dodge',fill=y) +
geom_text(aes(label=country,y=textpos),hjust=0,size=4) +
scale_alpha_identity() +
coord_flip() +
scale_y_continuous(limits=c(-2,3),
breaks=c(-2,-1,0,1,2,3)) +
theme(panel.grid.major.y=element_blank(),panel.grid.minor.x=element_line(),
axis.text.y=element_blank(), plot.title=element_text(size=14)) +
labs(title=x)
}, variables_indiv, themebasecolours[1:6], SIMPLIFY=FALSE)
args.list <- c(grrplots, 3, 2)
names(args.list) <- c(as.character(1:length(grrplots)), "nrow", "ncol")
do.call(grid.arrange, args.list)
variables_indiv
grr_v$alphaval <- .5
grr_v$alphaval[grr_v$country=='United Kingdom'] <- 1
loadcustomthemes(ifgcolours,'Myriad Pro')
ggplot <- function(...) ggplot2::ggplot(...) +
scale_fill_manual(values=themebasecolours) +
scale_colour_manual(values=themebasecolours)
grrplots <- mapply(function(x, y) {
grr_v2 <- grr_v[grr_v$variable==x,]
grr_v2$value[is.na(grr_v2$value)] <- -200
grr_v2$country <- with(grr_v2, reorder(country,value))
grr_v2$textpos <- ifelse(grr_v2$value>0,grr_v2$value,0)+.1
grr_vplot <- ggplot(grr_v2[grr_v2$variable==x,],
aes(country, value,alpha=alphaval)) +
geom_bar(stat='identity',position='dodge',fill=y) +
geom_text(aes(label=country,y=textpos),hjust=0,size=4) +
scale_alpha_identity() +
coord_flip() +
scale_y_continuous(limits=c(-2,3),
breaks=c(-2,-1,0,1,2,3)) +
theme(panel.grid.major.y=element_blank(),panel.grid.minor.x=element_line(),
axis.text.y=element_blank(), plot.title=element_text(size=14)) +
labs(title=x)
}, names(varlist_indiv), themebasecolours[1:6], SIMPLIFY=FALSE)
args.list <- c(grrplots, 3, 2)
names(args.list) <- c(as.character(1:length(grrplots)), "nrow", "ncol")
do.call(grid.arrange, args.list)
names(varlist_indiv)
varlist_indiv <- c('mean'='Average','proff'='Profesionalita','impar'='Impartiality',
'X6.1'='Effectiveness of regulation','X6.3'='Regulation enforced without delay',
'a3032'='Efficiency of tax collection','a3033'='Capacity to stop tax evasion')
grr_i$variable <- factor(grr_i$variable, levels=names(varlist_index))
varlist_indiv <- c('mean'='Average','proff'='Profesionalita','impar'='Impartiality',
'X6.1'='Effectiveness of regulation','X6.3'='Regulation enforced without delay',
'a3032'='Efficiency of tax collection','a3033'='Capacity to stop tax evasion')
variables_indiv <- names(varlist_indiv)
# INDEXES CODEBOOK AT
# http://www.governancereport.org/fileadmin/governancereport/2014/downloads/IndexesCodebook.pdf
varlist_index <- c('mean'='Average','intelligenceindex100'='Analytical capacity',
'coordexpindex100'='Quality of coordination',
'regqualindex100'='Quality of regulation',
'delivery_overallindex100'='Delivery capacity (outcomes)')
variables_index <- names(varlist_index)
# check that the country and variable names are correct in lists for filtering
sapply(countries, function(x) x %in% GovReportData2014$country)
sapply(variables_index, function(x) x %in% names(GovReportIndex2014)
sapply(variables_indiv, function(x) x %in% names(GovReportData2014))
varlist_indiv <- c('mean'='Average','proff'='Profesionalita','impar'='Impartiality',
'X6.1'='Effectiveness of regulation','X6.3'='Regulation enforced without delay',
'a3032'='Efficiency of tax collection','a3033'='Capacity to stop tax evasion')
variables_indiv <- names(varlist_indiv)
# INDEXES CODEBOOK AT
# http://www.governancereport.org/fileadmin/governancereport/2014/downloads/IndexesCodebook.pdf
varlist_index <- c('mean'='Average','intelligenceindex100'='Analytical capacity',
'coordexpindex100'='Quality of coordination',
'regqualindex100'='Quality of regulation',
'delivery_overallindex100'='Delivery capacity (outcomes)')
variables_index <- names(varlist_index)
# check that the country and variable names are correct in lists for filtering
sapply(countries, function(x) x %in% GovReportData2014$country)
sapply(variables_index, function(x) x %in% names(GovReportIndex2014)
sapply(variables_indiv, function(x) x %in% names(GovReportData2014))
varlist_indiv <- c('mean'='Average','proff'='Profesionalita','impar'='Impartiality',
'X6.1'='Effectiveness of regulation','X6.3'='Regulation enforced without delay',
'a3032'='Efficiency of tax collection','a3033'='Capacity to stop tax evasion')
variables_indiv <- names(varlist_indiv)
varlist_index <- c('mean'='Average','intelligenceindex100'='Analytical capacity',
'coordexpindex100'='Quality of coordination',
'regqualindex100'='Quality of regulation',
'delivery_overallindex100'='Delivery capacity (outcomes)')
variables_index <- names(varlist_index)
# check that the country and variable names are correct in lists for filtering
varlist_indiv <- c('mean'='Average','proff'='Profesionalita','impar'='Impartiality',
'X6.1'='Effectiveness of regulation','X6.3'='Regulation enforced without delay',
'a3032'='Efficiency of tax collection','a3033'='Capacity to stop tax evasion')
variables_indiv <- names(varlist_indiv)
# INDEXES CODEBOOK AT
# http://www.governancereport.org/fileadmin/governancereport/2014/downloads/IndexesCodebook.pdf
varlist_index <- c('mean'='Average','intelligenceindex100'='Analytical capacity',
'coordexpindex100'='Quality of coordination',
'regqualindex100'='Quality of regulation',
'delivery_overallindex100'='Delivery capacity (outcomes)')
variables_index <- names(varlist_index)
# check that the country and variable names are correct in lists for filtering
sapply(countries, function(x) x %in% GovReportData2014$country)
sapply(variables_index, function(x) x %in% names(GovReportIndex2014))
sapply(variables_indiv, function(x) x %in% names(GovReportData2014))
grr_i <- melt(GovReportIndex2014,id.vars = 'country') %>%
filter(country %in% countries & variable %in% variables_index) %>%
group_by(country) %>%
mutate(mean = mean(value[variable!='delivery_overallindex100'])) %>%
#   mutate(mean = mean(value,na.rm = T)) %>%
ungroup() %>%
dcast(country + mean ~ variable) %>%
melt() %>%
group_by(country) %>%
mutate(mean = value[variable=='mean']) %>%
ungroup() %>%
group_by(variable) %>%
arrange(-value)
grr_i$variable <- factor(grr_i$variable, levels=names(varlist_index))
grr_i$variable <- revalue(grr_i$variable, varlist_index)
variables <- c('Analytical capacity','Quality of coordination',
'Quality of regulation','Delivery capacity (outcomes)')
grr_i$alphaval <- .5
grr_i$alphaval[grr_i$countr=='United Kingdom'] <- 1
loadcustomthemes(ifgcolours,'Myriad Pro')
ggplot <- function(...) ggplot2::ggplot(...) +
scale_fill_manual(values=themebasecolours) +
scale_colour_manual(values=themebasecolours)
grr_iplots <- mapply(function(x, y) {
grr_i2 <- grr_i[grr_i$variable==x,]
grr_i2$country <- with(grr_i2, reorder(country,value))
grr_iplot <- ggplot(grr_i2[grr_i2$variable==x,], aes(country, value,alpha=alphaval)) +
geom_bar(stat='identity',position='dodge',fill=y) +
scale_alpha_identity() +
coord_flip() +
scale_y_continuous(limits=c(0,100),breaks=c(0,25,50,75,100)) +
theme(panel.grid.major.y=element_blank(),panel.grid.minor.x=element_line(),
axis.text.y=element_text(size=12), plot.title=element_text(size=14)) +
labs(title=x)
}, variables, themebasecolours[1:4], SIMPLIFY=FALSE)
args.list <- c(grr_iplots, 2,2)
names(args.list) <- c("plot1", "plot2", "plot3", 'plot4', "nrow", "ncol")
library(gridExtra)
do.call(grid.arrange, args.list)
grr_iplots <- mapply(function(x, y) {
grr_i2 <- grr_i[grr_i$variable==x,]
grr_i2$country <- with(grr_i2, reorder(country,value))
grr_iplot <- ggplot(grr_i2[grr_i2$variable==x,], aes(country, value,alpha=alphaval)) +
geom_bar(stat='identity',position='dodge',fill=y) +
scale_alpha_identity() +
coord_flip() +
scale_y_continuous(limits=c(0,100),breaks=c(0,25,50,75,100)) +
theme(panel.grid.major.y=element_blank(),panel.grid.minor.x=element_line(),
axis.text.y=element_text(size=12), plot.title=element_text(size=14)) +
labs(title=x)
}, variables, themebasecolours[1:4], SIMPLIFY=FALSE)
args.list <- c(grr_iplots, 2,2)
names(args.list) <- c("plot1", "plot2", "plot3", 'plot4', "nrow", "ncol")
library(gridExtra)
do.call(grid.arrange, args.list)
grr_v <- melt(GovReportData2014,id.vars = 'country') %>%
filter(country %in% countries & variable %in% variables_indiv) %>%
group_by(country) %>%
mutate(mean = mean(value[variable!='delivery_overallindex100'])) %>%
#   mutate(mean = mean(value,na.rm = T)) %>%
ungroup() %>%
dcast(country + mean ~ variable) %>%
melt() %>%
group_by(country) %>%
mutate(mean = value[variable=='mean']) %>%
ungroup() %>%
group_by(variable) %>%
arrange(value)
grr_v$variable <- revalue(grr_v$variable, varlist_indiv)
grr_v$alphaval <- .5
grr_v$alphaval[grr_v$country=='United Kingdom'] <- 1
grrplots <- mapply(function(x, y) {
grr_v2 <- grr_v[grr_v$variable==x,]
grr_v2$value[is.na(grr_v2$value)] <- -200
grr_v2$country <- with(grr_v2, reorder(country,value))
grr_v2$textpos <- ifelse(grr_v2$value>0,grr_v2$value,0)+.1
grr_vplot <- ggplot(grr_v2[grr_v2$variable==x,],
aes(country, value,alpha=alphaval)) +
geom_bar(stat='identity',position='dodge',fill=y) +
geom_text(aes(label=country,y=textpos),hjust=0,size=4) +
scale_alpha_identity() +
coord_flip() +
scale_y_continuous(limits=c(-2,3),
breaks=c(-2,-1,0,1,2,3)) +
theme(panel.grid.major.y=element_blank(),panel.grid.minor.x=element_line(),
axis.text.y=element_blank(), plot.title=element_text(size=14)) +
labs(title=x)
}, names(varlist_indiv), themebasecolours[1:6], SIMPLIFY=FALSE)
args.list <- c(grrplots, 3, 2)
names(args.list) <- c(as.character(1:length(grrplots)), "nrow", "ncol")
do.call(grid.arrange, args.list)
grr_v$alphaval <- .5
grr_v$alphaval[grr_v$country=='United Kingdom'] <- 1
grrplots <- mapply(function(x, y) {
grr_v2 <- grr_v[grr_v$variable==x,]
grr_v2$value[is.na(grr_v2$value)] <- -200
grr_v2$country <- with(grr_v2, reorder(country,value))
grr_v2$textpos <- ifelse(grr_v2$value>0,grr_v2$value,0)+.1
grr_vplot <- ggplot(grr_v2[grr_v2$variable==x,],
aes(country, value,alpha=alphaval)) +
geom_bar(stat='identity',position='dodge',fill=y) +
geom_text(aes(label=country,y=textpos),hjust=0,size=4) +
scale_alpha_identity() +
coord_flip() +
scale_y_continuous(limits=c(-2,3),
breaks=c(-2,-1,0,1,2,3)) +
theme(panel.grid.major.y=element_blank(),panel.grid.minor.x=element_line(),
axis.text.y=element_blank(), plot.title=element_text(size=14)) +
labs(title=x)
}, varlist_indiv, themebasecolours[1:6], SIMPLIFY=FALSE)
args.list <- c(grrplots, 3, 2)
names(args.list) <- c(as.character(1:length(grrplots)), "nrow", "ncol")
do.call(grid.arrange, args.list)
do.call(grid.arrange, args.list)
grr_v$alphaval <- .5
grr_v$alphaval[grr_v$country=='United Kingdom'] <- 1
grrplots <- mapply(function(x, y) {
grr_v2 <- grr_v[grr_v$variable==x,]
grr_v2$value[is.na(grr_v2$value)] <- -200
grr_v2$country <- with(grr_v2, reorder(country,value))
grr_v2$textpos <- ifelse(grr_v2$value>0,grr_v2$value,0)+.1
grr_vplot <- ggplot(grr_v2[grr_v2$variable==x,],
aes(country, value,alpha=alphaval)) +
geom_bar(stat='identity',position='dodge',fill=y) +
geom_text(aes(label=country,y=textpos),hjust=0,size=4) +
scale_alpha_identity() +
coord_flip() +
scale_y_continuous(limits=c(0,3),
breaks=c(0,1,2,3)) +
theme(panel.grid.major.y=element_blank(),panel.grid.minor.x=element_line(),
axis.text.y=element_blank(), plot.title=element_text(size=14)) +
labs(title=x)
}, varlist_indiv, themebasecolours[1:6], SIMPLIFY=FALSE)
args.list <- c(grrplots, 3, 2)
names(args.list) <- c(as.character(1:length(grrplots)), "nrow", "ncol")
do.call(grid.arrange, args.list)
library(pbtools)
library(gridExtra)
library(pbtools)
file <- tempfile()
urldata <- 'http://www.governancereport.org/fileadmin/governancereport/2014/downloads/GovReportDataset2014.csv'
urlindex <- 'http://www.governancereport.org/fileadmin/governancereport/2014/downloads/GovRep2014Indexes.csv'
download.file(urldata,destfile='./data-input/GovReport2014_data.csv')
download.file(urlindex,destfile='./data-input/GovReport2014_index.csv')
GovReportIndex2014 <- read.csv('./data-input/GovReport2014_index.csv')
GovReportData2014 <- read.csv('./data-input/GovReport2014_data.csv')
countries <- c('France','Singapore','Australia','Canada','United States',
'United Kingdom','New Zealand','Netherlands')
loadcustomthemes(ifgcolours,'Myriad Pro')
ggplot <- function(...) ggplot2::ggplot(...) +
scale_fill_manual(values=ifgbasecolours) +
scale_colour_manual(values=ifgbasecolours)
grr_v$alphaval <- .5
grr_v$alphaval[grr_v$country=='United Kingdom'] <- 1
grrplots <- mapply(function(x, y) {
grr_v2 <- grr_v[grr_v$variable==x,]
grr_v2$value[is.na(grr_v2$value)] <- -200
grr_v2$country <- with(grr_v2, reorder(country,value))
grr_v2$textpos <- ifelse(grr_v2$value>0,grr_v2$value,0)+.1
grr_vplot <- ggplot(grr_v2[grr_v2$variable==x,],
aes(country, value,alpha=alphaval)) +
geom_bar(stat='identity',position='dodge',fill=y) +
geom_text(aes(label=country,y=textpos),hjust=0,size=4) +
scale_alpha_identity() +
coord_flip() +
scale_y_continuous(limits=c(0,3),
breaks=c(0,1,2,3)) +
theme(panel.grid.major.y=element_blank(),panel.grid.minor.x=element_line(),
axis.text.y=element_blank(), plot.title=element_text(size=14)) +
labs(title=x)
}, varlist_indiv, themebasecolours[1:6], SIMPLIFY=FALSE)
args.list <- c(grrplots, 3, 2)
names(args.list) <- c(as.character(1:length(grrplots)), "nrow", "ncol")
do.call(grid.arrange, args.list)
loadcustomthemes(ifgcolours,'Calibri')
ggplot <- function(...) ggplot2::ggplot(...) +
scale_fill_manual(values=ifgbasecolours) +
scale_colour_manual(values=ifgbasecolours)
750/72
rstudio::viewer('./src/GovReport_UK.html')
devtools::install_github('rstudio/rstudio',args=c('--library=\"C:/PROGRA~1/R/R-30~1.2/library\"'))
rstudio::viewer('./src/GovReport_UK.html')
GovReportDataset2014 <- read.csv("C:\\Users\\bouchalp\\AppData\\Local\\Temp\\RtmpEBMBxS\\data9d84be45baa")
View(GovReportDataset2014)
vewier('src/GovReport_UK.html')
viewer('src/GovReport_UK.html')
grr_v$alphaval <- .5
grr_v$alphaval[grr_v$country=='United Kingdom'] <- 1
grrplots <- mapply(function(x, y) {
grr_v2 <- grr_v[grr_v$variable==x,]
grr_v2$value[is.na(grr_v2$value)] <- -200
grr_v2$country <- with(grr_v2, reorder(country,value))
grr_v2$textpos <- ifelse(grr_v2$value>0,grr_v2$value,0)+.1
grr_vplot <- ggplot(grr_v2[grr_v2$variable==x,],
aes(country, value,alpha=alphaval)) +
geom_bar(stat='identity',position='dodge',fill=y) +
#     geom_text(aes(label=country,y=textpos),hjust=0,size=4) +
scale_alpha_identity() +
coord_flip() +
scale_y_continuous(limits=c(0,3),
breaks=c(0,1,2,3)) +
theme(panel.grid.major.y=element_blank(),panel.grid.minor.x=element_line(),
plot.title=element_text(size=14)) +
labs(title=x)
}, varlist_indiv, ifgbasecolours[1:6], SIMPLIFY=FALSE)
args.list <- c(grrplots, 3, 2)
names(args.list) <- c(as.character(1:length(grrplots)), "nrow", "ncol")
do.call(grid.arrange, args.list)
install_github('jimhester/knitrBootstrap')
devtools::install_github('jimhester/knitrBootstrap')
install.packages("knitrBootstrap", lib="C:/Program Files/R/R-3.0.2/library")
library(knitrBootstrap)
render('./src/GovReport_UK.Rmd', 'knitrBootstrap::bootstrap_document')
library(rmarkdown)
render('./src/GovReport_UK.Rmd', 'knitrBootstrap::bootstrap_document')
render('./src/GovReport_UK.Rmd', 'knitrBootstrap::bootstrap_HTML')
render('./src/GovReport_UK.Rmd', 'knitrBootstrap::bootstrap_HTML')
render('./src/GovReport_UK.Rmd', 'knitrBootstrap::bootstrap_HTML')
render('./src/GovReport_UK.Rmd')
library(knitrBootstrap)
library(rmarkdown)
library(knitr)
knitrBootstrap::knit_bootstrap(input = './src/GovReport_UK.Rmd')
600*1.5
opts_knit$get('fig.width')
opts_knit$set('fig.width'=600/72)
opts_knit$get('fig.width')
opts_knit$get('fig.width')*72
devtools::install_github('jimhester/knitrBootstrap',args=c('--library=\"C:/PROGRA~1/R/R-30~1.2/library\"'))
library(igraph)
install.packages("igraph", lib="C:/Program Files/R/R-3.0.2/library")
install.packages("igraph", lib="C:/Program Files/R/R-3.0.2/library")
devtools::install_github('jimhester/knitrBootstrap',args=c('--library=\"C:/PROGRA~1/R/R-30~1.2/library\"'))
